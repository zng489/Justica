stages:
  - test-k8s
  - build
  - release
  - deploy

.env-staging:
  variables:
    ENVIRONMENT_NAME: "staging"
  environment:
    name: eks-hml-01
    deployment_tier: staging
    url: https://sniper.stg.pdpj.jus.br
    kubernetes:
      namespace: sniper

.env-production:
  variables:
    ENVIRONMENT_NAME: "production"
  environment:
    name: eks-prd-01
    deployment_tier: production
    url: https://sniper.pdpj.jus.br
    kubernetes:
      namespace: sniper

.test-k8s-template:
  stage: test-k8s
  image:
    name: registry.cnj.jus.br/segsa/k8s-utils:latest
    entrypoint: [ "" ]
  dependencies: []
  artifacts:
    paths: [ "kubernetes/" ]
  environment:
    action: prepare
  script:
    - cd "$CI_PROJECT_DIR/kubernetes/overlays/$CI_ENVIRONMENT_NAME"
    - kustomize edit set namespace "$KUBE_NAMESPACE"
    - kustomize edit set image "registry.cnj.jus.br/pdpj/sniper-frontend:$CI_COMMIT_SHORT_SHA.$ENVIRONMENT_NAME"
    - kustomize edit add annotation --force "app.gitlab.com/app:${CI_PROJECT_PATH_SLUG}"
      "app.gitlab.com/env:${CI_ENVIRONMENT_SLUG}" "app.gitlab.com/commit-short-sha:${CI_COMMIT_SHORT_SHA}"
    - kubectl apply --dry-run=client -k .

test-k8s-stg:
  extends:
    - .env-staging
    - .test-k8s-template
  only:
    - develop

test-k8s-prd:
  extends:
    - .env-production
    - .test-k8s-template
  only:
    - main

.docker-image-build:
  stage: build
  image: docker:20.10
  services:
    - docker:20.10-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u "$NEXUS_USERNAME" -p "$NEXUS_PASSWORD" registry.cnj.jus.br
  script:
    - echo "$CI_COMMIT_SHA" > "$CI_PROJECT_DIR/version.txt"
    - docker build --pull -t "registry.cnj.jus.br/pdpj/sniper-frontend:$CI_COMMIT_SHORT_SHA.$ENVIRONMENT_NAME" "$CI_PROJECT_DIR"
    - docker push "registry.cnj.jus.br/pdpj/sniper-frontend:$CI_COMMIT_SHORT_SHA.$ENVIRONMENT_NAME"

docker-image-build-stg:
  extends:
    - .env-staging
    - .docker-image-build
  only:
    - develop

docker-image-build-prd:
  extends:
    - .env-production
    - .docker-image-build
  only:
    - main

release-job:
  stage: release
  image:
    name: registry.gitlab.com/gitlab-org/release-cli:latest
    entrypoint: [ "" ]
  dependencies: []
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    GIT_STRATEGY: none
  script:
    - release-cli create --tag-name "${CI_COMMIT_TAG}" --description "${CI_COMMIT_MESSAGE}"

.deploy-template:
  stage: deploy
  image:
    name: registry.cnj.jus.br/segsa/k8s-utils:latest
    entrypoint: [ "" ]
  retry:
    max: 2
    when: stuck_or_timeout_failure
  variables:
    GIT_STRATEGY: none
  script:
    - cd "$CI_PROJECT_DIR/kubernetes/overlays/$CI_ENVIRONMENT_NAME"
    - kubectl apply -k .

deploy-stg:
  extends:
    - .env-staging
    - .deploy-template
  dependencies: [ "test-k8s-stg" ]
  only:
    - develop

deploy-prd:
  extends:
    - .env-production
    - .deploy-template
  dependencies: [ "test-k8s-prd" ]
  only:
    - main
