services:
    web:
       container_name: sniper_web
       restart: unless-stopped
       env_file: .env
       ports:
         - 5001:80
       volumes:
         - .:/app
         - django-static:/app/staticfiles
       build:
         context: .
         dockerfile: Dockerfile
       depends_on:
         db:
           condition: service_healthy
         graph_db:
           condition: service_healthy
         keycloak:
           condition: service_started
         redis:
           condition: service_started
         fakeapi:
           condition: service_started
         opensearch:
           condition: service_started

    fakeapi:
       container_name: sniper_fakeapi
       restart: unless-stopped
       ports:
         - 5002:80
       build:
         context: fakeapi
         dockerfile: Dockerfile
       volumes:
         - ./fakeapi/:/project

    db:
      image: postgres:13.3
      container_name: sniper_pg13_3
      restart: unless-stopped
      env_file: docker/env/postgres
      shm_size: "2gb"
      volumes:
          - ./docker/data/postgres:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 3s
        retries: 5

    graph_db:
      image: turicas/agensgraph:2.1.3
      container_name: sniper_ag21
      env_file: docker/env/agensgraph
      shm_size: "2gb"
      volumes:
          - ./docker/data/agensgraph:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 3s
        retries: 5

    keycloak-db:
      image: postgres:13.3
      container_name: sniper_keycloak_pg13_3
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password

    keycloak:
      image: quay.io/keycloak/keycloak:16.1.1
      container_name: sniper_keycloak
      ports:
        - "8080:8080"
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: keycloak-db
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: password
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: admin
      depends_on:
        keycloak-db:
          condition: service_started

    redis:
      image: redis:alpine
      container_name: sniper_redis
      restart: unless-stopped
      env_file: .env
      volumes:
        - "./docker/data/redis:/data"

    opensearch:
      image: opensearchproject/opensearch:2.13.0
      env_file: .env
      environment:
        - "discovery.type=single-node"
        - "bootstrap.memory_lock=true"
        - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
        - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_PASSWORD}"
      ports:
        - 9200:9200
      healthcheck:
         test: curl --silent --insecure https://localhost:9200 > /dev/null || exit 1
         interval: 5s
         timeout: 10s
         retries: 10

volumes:
  django-static:
  postgres_data:
